{"version":3,"sources":["Pokecard.js","Pokedex.js","Pokegame.js","App.js","reportWebVitals.js","index.js"],"names":["Pokecard","number","image","this","props","id","slice","name","type","exp","className","src","alt","Component","Pokedex","title","isWinner","pokemons","map","poke","base_experience","Pokegame","hand1","hand2","length","randomIndx","Math","floor","random","randomPoke","splice","push","exp1","reduce","total","exp2","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAuBeA,G,6KAdP,IAJUC,EAIJC,EAAK,UANH,8DAMG,QAJDD,EAI4BE,KAAKC,MAAMC,KAJjB,IAAM,YAAKJ,GAASK,OAAO,GAAKL,EAIrD,QADN,EAEuBE,KAAKC,MAAzBG,EAFH,EAEGA,KAAMC,EAFT,EAESA,KAAMC,EAFf,EAEeA,IACpB,OACI,sBAAKC,UAAU,WAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgCH,IAChC,qBAAKG,UAAU,iBAAf,SACI,qBAAKC,IAAKT,EAAOU,IAAKL,MAE1B,sBAAKG,UAAU,gBAAf,mBAAsCF,KACtC,sBAAKE,UAAU,gBAAf,kBAAqCD,Y,GAX9BI,cC4BRC,G,6KA7BP,IAAIC,EAOJ,OALIA,EADDZ,KAAKC,MAAMY,SACF,oBAAIN,UAAU,iBAAd,2BAEA,oBAAIA,UAAU,gBAAd,0BAIR,sBAAKA,UAAU,UAAf,UACKK,EACD,oDAAuBZ,KAAKC,MAAMK,OAClC,qBAAKC,UAAU,gBAAf,SACKP,KAAKC,MAAMa,SAASC,KAAI,SAAAC,GAAI,OACzB,cAAC,EAAD,CAEId,GAAIc,EAAKd,GACTE,KAAMY,EAAKZ,KACXC,KAAMW,EAAKX,KACXC,IAAKU,EAAKC,iBAJLD,EAAKd,gB,GAhBhBQ,cCAhBQ,E,uKAmBE,IAHA,IAAIC,EAAQ,GACRC,EAAK,YAAQpB,KAAKC,MAAMa,UAEtBK,EAAME,OAASD,EAAMC,QAAQ,CAC/B,IAAIC,EAAaC,KAAKC,MAAMD,KAAKE,SAAWL,EAAMC,QAC9CK,EAAaN,EAAMO,OAAOL,EAAY,GAAG,GAC7CH,EAAMS,KAAKF,GAEf,IAAMG,EAAOV,EAAMW,QAAQ,SAACC,EAAOf,GAAR,OAAiBe,EAAQf,EAAKC,kBACzD,GACMe,EAAOZ,EAAMU,QAAO,SAACC,EAAOf,GAAR,OAAiBe,EAAQf,EAAKC,kBACxD,GAEA,OACI,gCACI,4CACA,cAAC,EAAD,CAASH,SAAUK,EAAOb,IAAKuB,EAAMhB,SAAYgB,EAAOG,IACxD,cAAC,EAAD,CAASlB,SAAUM,EAAOd,IAAK0B,EAAMnB,SAAYmB,EAAOH,W,GAjCjDnB,aAAjBQ,EACMe,aAAe,CAClBnB,SAAU,CACN,CAAEZ,GAAI,EAAGE,KAAM,aAAcC,KAAM,OAAQY,gBAAiB,IAC5D,CAAEf,GAAI,EAAGE,KAAM,WAAYC,KAAM,QAASY,gBAAiB,IAC3D,CAAEf,GAAI,GAAIE,KAAM,UAAWC,KAAM,MAAOY,gBAAiB,IACzD,CAAEf,GAAI,GAAIE,KAAM,aAAcC,KAAM,SAAUY,gBAAiB,KAC/D,CAAEf,GAAI,GAAIE,KAAM,UAAWC,KAAM,WAAYY,gBAAiB,KAC9D,CAAEf,GAAI,GAAIE,KAAM,aAAcC,KAAM,SAAUY,gBAAiB,IAC/D,CAAEf,GAAI,GAAIE,KAAM,SAAUC,KAAM,SAAUY,gBAAiB,KAC3D,CAAEf,GAAI,IAAKE,KAAM,QAASC,KAAM,SAAUY,gBAAiB,MA6BzDC,Q,MC/BAgB,MARf,WACE,OACE,qBAAK3B,UAAU,MAAf,SACI,cAAC,EAAD,OCKO4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.db8b7675.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './Pokecard.css';\r\n\r\nconst IMG_API = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/';\r\n\r\nlet padToThree = (number) => (number <= 999 ? `00${number}`.slice(-3) : number);\r\n\r\nclass Pokecard extends Component {\r\n    render() {\r\n        const image = `${IMG_API}${padToThree(this.props.id)}.png`;\r\n        const { name, type, exp } = this.props;\r\n        return (\r\n            <div className=\"Pokecard\">\r\n                <h1 className=\"Pokecard-title\">{name}</h1>\r\n                <div className=\"Pokecard-image\">\r\n                    <img src={image} alt={name} />\r\n                </div>\r\n                <div className=\"Pokecard-data\">Type: {type}</div>\r\n                <div className=\"Pokecard-data\">EXP: {exp}</div>\r\n            </div> )\r\n    }\r\n}\r\n\r\nexport default Pokecard;","import React, { Component } from \"react\";\r\nimport Pokecard from './Pokecard';\r\nimport './Pokedex.css';\r\n\r\nclass Pokedex extends Component {\r\n    render() {\r\n        let title;\r\n        if(this.props.isWinner) {\r\n            title = <h1 className=\"Pokedex-winner\">Winning hand!</h1>\r\n        } else {\r\n            title = <h1 className=\"Pokedex-loser\">Losing hand!</h1>\r\n        }\r\n\r\n        return(\r\n            <div className=\"Pokedex\">\r\n                {title}\r\n                <h4>Total Experience: {this.props.exp}</h4>\r\n                <div className=\"Pokedex-cards\">\r\n                    {this.props.pokemons.map(poke => (\r\n                        <Pokecard\r\n                            key={poke.id}\r\n                            id={poke.id}\r\n                            name={poke.name}\r\n                            type={poke.type}\r\n                            exp={poke.base_experience}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Pokedex;","import React, { Component } from 'react'\r\nimport Pokedex from './Pokedex';\r\n\r\n\r\nclass Pokegame extends Component {\r\n     static defaultProps = {\r\n         pokemons: [\r\n             { id: 4, name: 'Charmander', type: 'fire', base_experience: 62 },\r\n             { id: 7, name: 'Squirtle', type: 'water', base_experience: 63 },\r\n             { id: 11, name: 'Metapod', type: 'bug', base_experience: 72 },\r\n             { id: 12, name: 'Butterfree', type: 'flying', base_experience: 178 },\r\n             { id: 25, name: 'Pikachu', type: 'electric', base_experience: 112 },\r\n             { id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95 },\r\n             { id: 94, name: 'Gengar', type: 'poison', base_experience: 225 },\r\n             { id: 133, name: 'Eevee', type: 'normal', base_experience: 65 }\r\n         ]\r\n\r\n     }; \r\n\r\n    render() {\r\n        let hand1 = [];\r\n        let hand2 = [ ...this.props.pokemons];\r\n\r\n        while(hand1.length < hand2.length) {\r\n            let randomIndx = Math.floor(Math.random() * hand2.length);\r\n            let randomPoke = hand2.splice(randomIndx, 1)[0];\r\n            hand1.push(randomPoke);\r\n        }\r\n        const exp1 = hand1.reduce( (total, poke) => total + poke.base_experience,\r\n        0);\r\n        const exp2 = hand2.reduce((total, poke) => total + poke.base_experience,\r\n        0);\r\n\r\n        return(\r\n            <div>\r\n                <h1>Poke Game!</h1>\r\n                <Pokedex pokemons={hand1} exp={exp1} isWinner = {exp1 > exp2}/>\r\n                <Pokedex pokemons={hand2} exp={exp2} isWinner = {exp2 > exp1}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pokegame;","import Pokegame from './Pokegame';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Pokegame />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}